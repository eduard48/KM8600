/**************************************************************************************************************************************************
* Заголовочный файл стандартной библиотеки для контроллера КМ01-8600.М0
* Здесь делаются основные объявления типа и конфигурации контроллера
***************************************************************************************************************************************************/
// --- Объявление типа контроллера ---																															
#ifndef _KM8600_	
#define _KM8600_																																

// +++++++++++++++++++++++++++++++++++++++++++++++ СТЕК ПРОТОКОЛА MODBUS ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// *************** МОДУЛЬ KM01-8600.M *************************************************************************************************************
unsigned int MB_Hreg[124];		// Стек протокола содержащий регистры Holdings (40001) ModBusRTU
unsigned int MB_Ireg[124];		// Стек протокола содержащий регистры Input (30001) ModBusRTU
#define maxAddr_DI 16			// Максимальное число DI - не используемые это пустые
#define maxAddr_DO 16			// Максимальное число D0 - не используемые это пустые
#define maxAddrRegHOLD 124		// Максималиное кол - во регистров Holding
#define maxAddrRegINP 124		// Максималиное кол - во регистров Input

// *************** МАКРОСЫ для работы *************************************************************************************************************
#define LD_on	PORTB |= (0x01 << 0x03)		// Включить зеленый светодиод
#define LD_off	PORTB &=~(0x01 << 0x03)		// Выключить зеленый светодиод

#define WDR()	asm("wdr")
#define TRUE            1
#define FALSE           0

// *************** Глобальные переменные **********************************************************************************************************
char Address_device;			// Адрес модуля
char Led_flash;					// Регистр флагов таймеров для индикации
char TimerTakt;					// Таймер основной задачи
char TimerLed;					// Время гашения светодиода питания
//char TimerAsk;					// Таймер задержки ответа на посылку ModBus

// *************** Постоянные в flash памяти ******************************************************************************************************
// *************** Заполнять версию ПО и серийный номер контроллера *******************************************************************************
static const char PROGMEM fl_name[] = "KM01-8600.M0";	// Имя контроллера
static const char PROGMEM fl_version[] = "020330";		// Версия ПО контроллера (это прошивка ни чего не делает!)
static const char PROGMEM fl_progid[] = "100001 ";		// Серийный номер контроллера

// ********************* Объявления для работы в программе пользователя ***************************************************************************
// *** чтение состояния цифровых входов контроллера *** (здесь использовать для сравнения с 0 -> != 0 | == 0)
#define rdi1	(MB_Ireg[1] & 0x01)
#define rdi2	(MB_Ireg[1] & 0x02)
#define rdi3	(MB_Ireg[1] & 0x04)
#define rdi4	(MB_Ireg[1] & 0x08)
#define rdi5	(MB_Ireg[1] & 0x10)
#define rdi6	(MB_Ireg[1] & 0x20)
#define rdi7	(MB_Ireg[1] & 0x40)
#define rdi8	(MB_Ireg[1] & 0x80)
#define rdi9	(MB_Ireg[1] & 0x100)
// *** чтение состояния цифровых выходов ***
#define rdo1	(MB_Ireg[2] & 0x01)
#define rdo2	(MB_Ireg[2] & 0x02)
#define rdo3	(MB_Ireg[2] & 0x04)
#define rdo4	(MB_Ireg[2] & 0x08)
#define rdo5	(MB_Ireg[2] & 0x10)
#define rdo6	(MB_Ireg[2] & 0x20)
// *** чтение состояния счетчиков ***
#define rcnt1	(((unsigned long int)MB_Ireg[12] << 16) + MB_Ireg[11])
#define rcnt2	(((unsigned long int)MB_Ireg[14] << 16) + MB_Ireg[13])
#define rcnt3	(((unsigned long int)MB_Ireg[16] << 16) + MB_Ireg[15])
#define rcnt4	(((unsigned long int)MB_Ireg[18] << 16) + MB_Ireg[17])
#define rcnt5	(((unsigned long int)MB_Ireg[20] << 16) + MB_Ireg[19])
#define rcnt6	(((unsigned long int)MB_Ireg[22] << 16) + MB_Ireg[21])
#define rcnt7	(((unsigned long int)MB_Ireg[24] << 16) + MB_Ireg[23])
#define rcnt8	(((unsigned long int)MB_Ireg[26] << 16) + MB_Ireg[25])
// *** управление цифровыми выходами ***
#define sdo1_0	(MB_Hreg[5] &= ~(0x01))
#define sdo1_1	(MB_Hreg[5] |=  (0x01))
#define sdo2_0	(MB_Hreg[5] &= ~(0x02))
#define sdo2_1	(MB_Hreg[5] |=  (0x02))
#define sdo3_0	(MB_Hreg[5] &= ~(0x04))
#define sdo3_1	(MB_Hreg[5] |=  (0x04))
#define sdo4_0	(MB_Hreg[5] &= ~(0x08))
#define sdo4_1	(MB_Hreg[5] |=  (0x08))
#define sdo5_0	(MB_Hreg[5] &= ~(0x10))
#define sdo5_1	(MB_Hreg[5] |=  (0x10))
#define sdo6_0	(MB_Hreg[5] &= ~(0x20))
#define sdo6_1	(MB_Hreg[5] |=  (0x20))

#endif
//************************************************** END *******************************************************************************************